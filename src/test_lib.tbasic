uses "console", "file"

#default declare checkMissing true                        ' Useful to catch errors in testing phase

$RUST_INTEROP_DLL = "..\target\release\rust_interop.dll"  ' Hehe, this is here just for comfort, in production
                                                          ' version the path is not needed, just lay the DLL
                                                          ' by the script

declare function rsSumTwoIntegers lib $RUST_INTEROP_DLL alias "rsSumTwoIntegers" (byval a as integer, byval b as integer) as integer
declare function rsSumTwoLongs    lib $RUST_INTEROP_DLL alias "rsSumTwoLongs"    (byval a as long, byval b as long) as long
 
declare function rsSumTwoSingles  lib $RUST_INTEROP_DLL alias "rsSumTwoSingles"  (byval a as single, byval b as single) as single
declare function rsSumTwoDoubles  lib $RUST_INTEROP_DLL alias "rsSumTwoDoubles"  (byval a as double, byval b as double) as double

declare sub      rsPrintASCIIZ    lib $RUST_INTEROP_DLL alias "rsPrintASCIIZ"    (byref s as asciiz)

function tbMain()
  printl "Numeric data types" in 14
  printl

  printl "rsSumTwoIntegers" in 10
  printl format$(rsSumTwoIntegers(16000, 8000))
  printl
  
  printl "rsSumTwoLongs" in 10
  printl format$(rsSumTwoLongs(160000, 80000))
  printl
  
  printl "rsSumTwoSingles" in 10
  printl format$(rsSumTwoSingles(1.1, 2.2))
  printl
  
  printl "rsSumTwoDoubles" in 10
  printl format$(rsSumTwoDoubles(1.1, 2.2))
  printl

  printl
  printl "String data types" in 14
  printl
    
  printl "rsPrintASCIIZ" in 10    
  rsPrintASCIIZ("Hello Rust, I am ThinBASIC")
  
  waitkey
  
end function
